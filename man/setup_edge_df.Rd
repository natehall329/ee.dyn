% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setup_edge_df.R
\name{setup_edge_df}
\alias{setup_edge_df}
\title{Setup Edge Dataframe for Graph Analysis}
\usage{
setup_edge_df(lagged, edges, outliers, edge_values_from, keep_clean = TRUE)
}
\arguments{
\item{lagged}{Logical indicating whether the edges are lagged (`TRUE`) or
contemporaneous (`FALSE`). This parameter primarily affects internal processing
and labeling within the function.}

\item{edges}{A dataframe of edges to be processed. This should include
columns for file identifiers, subgroup membership (if any), and edge
coefficients, among possibly others.}

\item{outliers}{An optional list specifying parameters for outlier adjustment
within the edge dataframe. This list can include methods for outlier handling,
limits for identification, and grouping variables, among other settings.}

\item{edge_values_from}{Character string specifying the source of edge values
within the `edges` dataframe. Typically, this will be "beta" for beta
coefficients or "z" for z-scores.}

\item{keep_clean}{Logical indicating whether to keep the cleaned data within
the output dataframe. If `TRUE`, original columns corresponding to outliers
will be removed, and only cleaned data will be retained.}
}
\value{
A dataframe with edges organized and potentially cleaned for further
graph analysis. The structure of the output dataframe is tailored for easy
integration with graph generation and analysis functions, supporting both
group-level and individual-level analysis.
}
\description{
Prepares an edge dataframe for graph analysis by organizing edges based on
their level (group, individual, or subgroup) and handling outliers as specified.
This function is a crucial step in processing edges for network analysis,
ensuring that data is appropriately structured and cleaned for subsequent
graph metrics computation. The flexibility in handling outliers and the option
to retain cleaned data are key features of this function.
}
\examples{
# Assuming `edges` is a dataframe containing edges from GIMME analysis and
# `outliers` specifies how outliers should be handled
edge_df <- setup_edge_df(lagged = FALSE, edges = edges,
                         outliers = list(method = "winsorize",
                                         limit_class = "prob",
                                         limits = c(.025, .975)),
                         edge_values_from = "beta",
                         keep_clean = TRUE)

}
\author{
Nate Hall
}
